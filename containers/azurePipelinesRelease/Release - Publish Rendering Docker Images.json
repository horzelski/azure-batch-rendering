{
  "source": 2,
  "revision": 115,
  "description": null,
  "createdBy": {
    "displayName": "David Kydd",
    "url": "https://app.vssps.visualstudio.com/A41b4f3ee-c651-4a14-9847-b7cbb5315b80/_apis/Identities/47bd54c4-e66a-4c40-932e-6a94d47771e8",
    "_links": {
      "avatar": {
        "href": "https://msazure.visualstudio.com/_apis/GraphProfile/MemberAvatars/aad.MWE4MWE0NmYtZTBjOC03N2EzLWEyNTQtZGJlYTg5YTE5NjEz"
      }
    },
    "id": "47bd54c4-e66a-4c40-932e-6a94d47771e8",
    "uniqueName": "dakydd@microsoft.com",
    "imageUrl": "https://msazure.visualstudio.com/_apis/GraphProfile/MemberAvatars/aad.MWE4MWE0NmYtZTBjOC03N2EzLWEyNTQtZGJlYTg5YTE5NjEz",
    "descriptor": "aad.MWE4MWE0NmYtZTBjOC03N2EzLWEyNTQtZGJlYTg5YTE5NjEz"
  },
  "createdOn": "2019-05-26T21:58:25.807Z",
  "modifiedBy": {
    "displayName": "David Kydd",
    "url": "https://app.vssps.visualstudio.com/A41b4f3ee-c651-4a14-9847-b7cbb5315b80/_apis/Identities/47bd54c4-e66a-4c40-932e-6a94d47771e8",
    "_links": {
      "avatar": {
        "href": "https://msazure.visualstudio.com/_apis/GraphProfile/MemberAvatars/aad.MWE4MWE0NmYtZTBjOC03N2EzLWEyNTQtZGJlYTg5YTE5NjEz"
      }
    },
    "id": "47bd54c4-e66a-4c40-932e-6a94d47771e8",
    "uniqueName": "dakydd@microsoft.com",
    "imageUrl": "https://msazure.visualstudio.com/_apis/GraphProfile/MemberAvatars/aad.MWE4MWE0NmYtZTBjOC03N2EzLWEyNTQtZGJlYTg5YTE5NjEz",
    "descriptor": "aad.MWE4MWE0NmYtZTBjOC03N2EzLWEyNTQtZGJlYTg5YTE5NjEz"
  },
  "modifiedOn": "2020-02-17T03:20:06.530Z",
  "isDeleted": false,
  "lastRelease": {
    "id": 827,
    "name": "Release.33-Version.1.0.0",
    "artifacts": [],
    "_links": {},
    "description": "",
    "releaseDefinition": {
      "id": 7,
      "projectReference": null,
      "_links": {}
    },
    "createdOn": "2020-02-19T23:39:33.233Z",
    "createdBy": {
      "displayName": "David Kydd",
      "url": "https://app.vssps.visualstudio.com/A41b4f3ee-c651-4a14-9847-b7cbb5315b80/_apis/Identities/47bd54c4-e66a-4c40-932e-6a94d47771e8",
      "_links": {
        "avatar": {
          "href": "https://msazure.visualstudio.com/_apis/GraphProfile/MemberAvatars/aad.MWE4MWE0NmYtZTBjOC03N2EzLWEyNTQtZGJlYTg5YTE5NjEz"
        }
      },
      "id": "47bd54c4-e66a-4c40-932e-6a94d47771e8",
      "uniqueName": "dakydd@microsoft.com",
      "imageUrl": "https://msazure.visualstudio.com/_apis/GraphProfile/MemberAvatars/aad.MWE4MWE0NmYtZTBjOC03N2EzLWEyNTQtZGJlYTg5YTE5NjEz",
      "descriptor": "aad.MWE4MWE0NmYtZTBjOC03N2EzLWEyNTQtZGJlYTg5YTE5NjEz"
    }
  },
  "variables": {
    "acrLoginPassword": {
      "value": "$(MCRAuthKey)"
    },
    "acrLoginUsername": {
      "value": "$(MCRAppId)"
    },
    "acrRegistry": {
      "value": "azbatchmcr.azurecr.io"
    },
    "acrRepoBase": {
      "value": "$(acrRegistry)/public/azure-batch/rendering"
    },
    "azureBatchMaya-branchName": {
      "value": "master",
      "allowOverride": true
    },
    "azureBatchRendering-branchName": {
      "value": "master",
      "allowOverride": true
    },
    "batchExplorerData-branchName": {
      "value": "master",
      "allowOverride": true
    },
    "fullMetadataFile": {
      "value": "false",
      "allowOverride": true
    },
    "includeAntecendents": {
      "value": "false",
      "allowOverride": true
    },
    "includeDescendents": {
      "value": "false",
      "allowOverride": true
    },
    "prBranchName": {
      "value": "renderingContainerImages-$(Release.ReleaseName)"
    },
    "prBranchName-versionUpdate": {
      "value": "$(version)-$(Release.ReleaseName)"
    },
    "prodRegistry": {
      "value": "mcr.microsoft.com"
    },
    "prodRepoBase": {
      "value": "$(prodRegistry)/azure-batch/rendering"
    },
    "pushProdImages": {
      "value": "false",
      "allowOverride": true
    },
    "targetRelativeDirs": {
      "value": "maya/centos7/2017u5/arnold2011",
      "allowOverride": true
    },
    "testRegistry": {
      "value": "renderingbuild.azurecr.io"
    },
    "testRepoBase": {
      "value": "$(testRegistry)/azure-batch/rendering"
    },
    "testRepoPassword": {
      "value": "$(renderingbuild-acr)"
    },
    "testRepoUsername": {
      "value": "renderingbuild"
    },
    "version": {
      "value": "0.0.2",
      "allowOverride": true
    }
  },
  "variableGroups": [
    826,
    827
  ],
  "environments": [
    {
      "id": 8,
      "name": "Build and Validate",
      "rank": 1,
      "owner": {
        "displayName": "David Kydd",
        "url": "https://app.vssps.visualstudio.com/A41b4f3ee-c651-4a14-9847-b7cbb5315b80/_apis/Identities/47bd54c4-e66a-4c40-932e-6a94d47771e8",
        "_links": {
          "avatar": {
            "href": "https://msazure.visualstudio.com/_apis/GraphProfile/MemberAvatars/aad.MWE4MWE0NmYtZTBjOC03N2EzLWEyNTQtZGJlYTg5YTE5NjEz"
          }
        },
        "id": "47bd54c4-e66a-4c40-932e-6a94d47771e8",
        "uniqueName": "dakydd@microsoft.com",
        "imageUrl": "https://msazure.visualstudio.com/_apis/GraphProfile/MemberAvatars/aad.MWE4MWE0NmYtZTBjOC03N2EzLWEyNTQtZGJlYTg5YTE5NjEz",
        "descriptor": "aad.MWE4MWE0NmYtZTBjOC03N2EzLWEyNTQtZGJlYTg5YTE5NjEz"
      },
      "variables": {},
      "variableGroups": [],
      "preDeployApprovals": {
        "approvals": [
          {
            "rank": 1,
            "isAutomated": true,
            "isNotificationOn": false,
            "id": 22
          }
        ],
        "approvalOptions": {
          "requiredApproverCount": null,
          "releaseCreatorCanBeApprover": false,
          "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
          "enforceIdentityRevalidation": false,
          "timeoutInMinutes": 0,
          "executionOrder": 1
        }
      },
      "deployStep": {
        "id": 23
      },
      "postDeployApprovals": {
        "approvals": [
          {
            "rank": 1,
            "isAutomated": true,
            "isNotificationOn": false,
            "id": 24
          }
        ],
        "approvalOptions": {
          "requiredApproverCount": null,
          "releaseCreatorCanBeApprover": false,
          "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
          "enforceIdentityRevalidation": false,
          "timeoutInMinutes": 0,
          "executionOrder": 2
        }
      },
      "deployPhases": [
        {
          "deploymentInput": {
            "parallelExecution": {
              "parallelExecutionType": 0
            },
            "agentSpecification": null,
            "skipArtifactsDownload": false,
            "artifactsDownloadInput": {
              "downloadInputs": [
                {
                  "alias": "PublishContainerImages",
                  "artifactType": "Build",
                  "artifactDownloadMode": "All",
                  "artifactItems": []
                }
              ]
            },
            "queueId": 5233,
            "demands": [],
            "enableAccessToken": true,
            "timeoutInMinutes": 0,
            "jobCancelTimeoutInMinutes": 1,
            "condition": "succeeded()",
            "overrideInputs": {}
          },
          "rank": 1,
          "phaseType": 1,
          "name": "Agent job",
          "refName": null,
          "workflowTasks": [
            {
              "environment": {},
              "taskId": "e28912f1-0114-4464-802a-a3a35437fd16",
              "version": "1.*",
              "name": "Login to DockerHub",
              "refName": "",
              "enabled": false,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "containerregistrytype": "Container Registry",
                "dockerRegistryEndpoint": "1b92d996-4f48-4cf3-9ba0-12a1977ae7df",
                "azureSubscriptionEndpoint": "",
                "azureContainerRegistry": "",
                "command": "login",
                "dockerFile": "**/Dockerfile",
                "arguments": "",
                "pushMultipleImages": "false",
                "tagMultipleImages": "false",
                "imageName": "$(Build.Repository.Name):$(Build.BuildId)",
                "imageNamesPath": "",
                "qualifyImageName": "true",
                "qualifySourceImageName": "false",
                "includeSourceTags": "false",
                "includeLatestTag": "false",
                "addDefaultLabels": "true",
                "useDefaultContext": "true",
                "buildContext": "",
                "imageDigestFile": "",
                "containerName": "",
                "ports": "",
                "volumes": "",
                "envVars": "",
                "workingDirectory": "",
                "entrypointOverride": "",
                "containerCommand": "",
                "runInBackground": "true",
                "restartPolicy": "no",
                "maxRestartRetries": "",
                "dockerHostEndpoint": "",
                "enforceDockerNamingConvention": "true",
                "memoryLimit": ""
              }
            },
            {
              "environment": {},
              "taskId": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
              "version": "2.*",
              "name": "Login to MCR",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "script": "docker login $(acrRegistry) -u=$(acrLoginUsername) -p=$(acrLoginPassword)",
                "workingDirectory": "",
                "failOnStderr": "false"
              }
            },
            {
              "environment": {},
              "taskId": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
              "version": "2.*",
              "name": "Login to test container registry",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "script": "docker login $(testRegistry) -u=$(testRepoUsername) -p=$(testRepoPassword)",
                "workingDirectory": "",
                "failOnStderr": "false"
              }
            },
            {
              "environment": {},
              "taskId": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
              "version": "2.*",
              "name": "Set git user",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "script": "git config --global user.email \"rendering-build@microsoft.com\"\ngit config --global user.name \"azurebatchrendering\"",
                "workingDirectory": "",
                "failOnStderr": "false"
              }
            },
            {
              "environment": {},
              "taskId": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
              "version": "2.*",
              "name": "Git Clone azure-batch-rendering",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "script": "git clone https://azurebatchrendering:$(azurebatchrendering-github)@github.com/azurebatchrendering/azure-batch-rendering.git azure-batch-rendering\ngit -C azure-batch-rendering checkout -b $(azureBatchRendering-branchName)\ngit -C azure-batch-rendering pull https://github.com/azure/azure-batch-rendering.git $(azureBatchRendering-branchName) -s recursive -X theirs\ngit -C azure-batch-rendering push origin $(azureBatchRendering-branchName)\ngit -C azure-batch-rendering checkout -b $(prBranchName-versionUpdate)",
                "workingDirectory": "",
                "failOnStderr": "false"
              }
            },
            {
              "environment": {},
              "taskId": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
              "version": "2.*",
              "name": "Git Clone batch-extension-templates",
              "refName": "",
              "enabled": false,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "script": "git clone -b $(batchExtensionTemplates-branchName) https://github.com/Azure/batch-extension-templates.git batch-extension-templates\n",
                "workingDirectory": "",
                "failOnStderr": "false"
              }
            },
            {
              "environment": {},
              "taskId": "5541a522-603c-47ad-91fc-a4b1d163081b",
              "version": "2.*",
              "name": "Build and Publish ContainerImages",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 120,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "command": "custom",
                "publishWebProjects": "true",
                "projects": "",
                "custom": " PublishContainerImages.dll",
                "arguments": "publish --buildversion $(version) --storagekey $(renderingapplications-storage) --prodrepobase $(prodRepoBase) --acrrepobase $(acrRepoBase) --testrepobase $(testRepoBase) --testrepousername $(testRepoUsername) --testrepopassword $(testRepoPassword) --batchextensiontemplatesrootdir \"../../batch-extension-templates/batch-extension-templates\" --dockerinstallscriptsrootdir \"../../azure-batch-rendering/docker/\" --targetrelativedirs \"$(targetRelativeDirs)\" --includeantecendents $(includeAntecendents) --includedescendents $(includeDescendents) --gitcommitsha $(Release.Artifacts.PublishContainerImages.SourceVersion) --releasename $(Release.ReleaseName) --pushtestimages true --outputfullmetadatafile $(fullMetadataFile)",
                "restoreArguments": "",
                "publishTestResults": "true",
                "testRunTitle": "",
                "zipAfterPublish": "true",
                "modifyOutputPath": "true",
                "selectOrConfig": "select",
                "feedRestore": "",
                "includeNuGetOrg": "true",
                "nugetConfigPath": "",
                "externalEndpoints": "",
                "noCache": "false",
                "packagesDirectory": "",
                "verbosityRestore": "Detailed",
                "searchPatternPush": "$(Build.ArtifactStagingDirectory)/*.nupkg",
                "nuGetFeedType": "internal",
                "feedPublish": "",
                "publishPackageMetadata": "true",
                "externalEndpoint": "",
                "searchPatternPack": "**/*.csproj",
                "configurationToPack": "$(BuildConfiguration)",
                "outputDir": "$(Build.ArtifactStagingDirectory)",
                "nobuild": "false",
                "includesymbols": "false",
                "includesource": "false",
                "versioningScheme": "off",
                "versionEnvVar": "",
                "requestedMajorVersion": "1",
                "requestedMinorVersion": "0",
                "requestedPatchVersion": "0",
                "buildProperties": "",
                "verbosityPack": "Detailed",
                "workingDirectory": "$(System.DefaultWorkingDirectory)/PublishContainerImages/PublishContainerImages"
              }
            },
            {
              "environment": {
                "DOCKER_CLI_EXPERIMENTAL": "enabled"
              },
              "taskId": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
              "version": "2.*",
              "name": "Wait for test images",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "script": "#!/bin/bash\n\nmapfile -t images< PublishContainerImages/PublishContainerImages/OutputImages/testImages.txt\n\necho \"Checking manifests for the following image:tag\"\nfor each in \"${images[@]}\"\ndo\n  echo \"$each\"\ndone\n\ninspectManifests(){\n    for image in \"${images[@]}\"; do\n        docker manifest inspect \"$image\" > /dev/null\n        \n        if [ $? -ne 0 ]; then \n            return 1\n        fi\n    done \n    return 0\n}\n\ndummy=\"$(inspectManifests)\"\nnum_var=$?\n\nwhile [ $num_var -ne \"0\" ]; do\n    var=\"$(inspectManifests)\"\n    num_var=$?\ndone",
                "workingDirectory": "",
                "failOnStderr": "true"
              }
            },
            {
              "environment": {},
              "taskId": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
              "version": "2.*",
              "name": "Clone repos which use metadata file",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "script": "git clone https://azurebatchrendering:$(azurebatchrendering-github)@github.com/azurebatchrendering/BatchExplorer-data.git batchexplorer-data\ngit -C batchexplorer-data checkout -b $(batchExplorerData-branchName)\ngit -C batchexplorer-data pull https://github.com/azure/batchexplorer-data.git $(batchExplorerData-branchName) -s recursive -X theirs\ngit -C batchexplorer-data push origin $(batchExplorerData-branchName)\ngit -C batchexplorer-data checkout -b $(prBranchName)\n\ngit clone https://azurebatchrendering:$(azurebatchrendering-github)@github.com/azurebatchrendering/azure-batch-maya.git azure-batch-maya\ngit -C azure-batch-maya checkout -b  $(azureBatchMaya-branchName)\ngit -C azure-batch-maya pull https://github.com/azure/azure-batch-maya.git $(azureBatchMaya-branchName) -s recursive -X theirs\ngit -C azure-batch-maya push origin $(azureBatchMaya-branchName)\ngit -C azure-batch-maya checkout -b $(prBranchName)\n\n",
                "workingDirectory": "",
                "failOnStderr": "false"
              }
            },
            {
              "environment": {},
              "taskId": "ec8bd6e1-aca5-46fc-9cc1-6aa46cb2a145",
              "version": "1.*",
              "name": "Task group: Execute batch-extension-templates Runner ",
              "refName": "",
              "enabled": true,
              "alwaysRun": true,
              "continueOnError": true,
              "timeoutInMinutes": 0,
              "definitionType": "metaTask",
              "overrideInputs": {},
              "condition": "succeededOrFailed()",
              "inputs": {
                "BATCH_ACCOUNT_NAME": "$(BATCH_ACCOUNT_NAME)",
                "BATCH_ACCOUNT_SUB": "$(BATCH_ACCOUNT_SUBSCRIPTION_ID)",
                "BATCH_ACCOUNT_URL": "$(BATCH_ACCOUNT_URL)",
                "BatchAccountKey": "$(renderingbuildmwh01-batch)",
                "KEYVAULT_URL": "$(KEYVAULT_URL)",
                "SERVICE_PRINCIPAL_CLIENT_ID": "$(SERVICE_PRINCIPAL_CLIENT_ID)",
                "SERVICE_PRINCIPAL_RESOURCE": "$(SERVICE_PRINCIPAL_RESOURCE)",
                "SERVICE_PRINCIPAL_TENANT": "$(SERVICE_PRINCIPAL_TENANT)",
                "ServicePrincipalCredentialsSecret": "$(renderingbuild-serviceprincipal)",
                "STORAGE_ACCOUNT_NAME": "$(STORAGE_ACCOUNT_NAME)",
                "StorageAccountKey": "$(renderingbuildmwh01-storage)",
                "TEST_CONFIG_FILE": "../../../PublishContainerImages/PublishContainerImages/OutputTests/testConfiguration.json"
              }
            },
            {
              "environment": {},
              "taskId": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
              "version": "2.*",
              "name": "Copy full Metadata File (option 1)",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "and(succeeded(), eq(variables['fullMetadataFile'], 'true'))",
              "inputs": {
                "script": "cp  PublishContainerImages/PublishContainerImages/OutputImages/rendering-container-images.json batchexplorer-data/data/rendering-container-images.json\ncp  PublishContainerImages/PublishContainerImages/OutputImages/rendering-container-images.json azure-batch-maya/azure_batch_maya/scripts/tools/rendering-container-images.json",
                "workingDirectory": "",
                "failOnStderr": "false"
              }
            },
            {
              "environment": {},
              "taskId": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
              "version": "2.*",
              "name": "Copy merged Metadata File (option 2)",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "and(succeeded(), eq(variables['fullMetadataFile'], 'false'))",
              "inputs": {
                "script": "dotnet $(System.DefaultWorkingDirectory)/PublishContainerImages/PublishContainerImages/PublishContainerImages.dll mergejson --masterfile \"batchexplorer-data/data/rendering-container-images.json\" --newimagesfile \"PublishContainerImages/PublishContainerImages/OutputImages/rendering-container-images.json\" --outputfile be-rendering-container-images-merged.json \n\ncp  be-rendering-container-images-merged.json batchexplorer-data/data/rendering-container-images.json\n\ndotnet $(System.DefaultWorkingDirectory)/PublishContainerImages/PublishContainerImages/PublishContainerImages.dll mergejson --masterfile \"azure-batch-maya/azure_batch_maya/scripts/tools/rendering-container-images.json\" --newimagesfile \"PublishContainerImages/PublishContainerImages/OutputImages/rendering-container-images.json\" --outputfile \"maya-rendering-container-images-merged.json\" --exclusivelyforapp \"maya\"\n\ncp  maya-rendering-container-images-merged.json azure-batch-maya/azure_batch_maya/scripts/tools/rendering-container-images.json",
                "workingDirectory": "",
                "failOnStderr": "false"
              }
            },
            {
              "environment": {},
              "taskId": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
              "version": "2.*",
              "name": "Push repository updates",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "script": "git -C batchexplorer-data add -A\ngit -C batchexplorer-data commit -m \"rendering-container-images.json $(version) - $(Release.ReleaseName)\"\ngit -C batchexplorer-data push origin $(prBranchName)\n\ngit -C azure-batch-maya add -A\ngit -C azure-batch-maya commit -m \"rendering-container-images.json $(version) - $(Release.ReleaseName)\"\ngit -C azure-batch-maya push origin $(prBranchName)\n\ngit -C azure-batch-rendering add -A\ngit -C azure-batch-rendering commit -m \"Update $(version) -  $(Release.ReleaseName)\"\ngit -C azure-batch-rendering push origin $(prBranchName-versionUpdate)\n",
                "workingDirectory": "",
                "failOnStderr": "false"
              }
            },
            {
              "environment": {},
              "taskId": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
              "version": "2.*",
              "name": "Install hub",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "script": "# Install binary and documentation\nwget https://github.com/github/hub/releases/download/v2.12.1/hub-linux-amd64-2.12.1.tgz\ntar zvxvf hub-linux-amd64-2.12.1.tgz\nsudo ./hub-linux-amd64-2.12.1/install\n\n# Setup autocomplete for bash:\nmkdir -p ~/.bash/completions\nmv ./hub-linux-amd64-2.12.1/etc/hub.bash_completion.sh ~/.bash/completions/_hub\necho \"if [ -f ~/.bash/completions/_hub ]; then\" >> ~/.bashrc\necho \"    . ~/.bash/completions/_hub\" >> ~/.bashrc\necho \"fi\" >> ~/.bashrc\n\n# add alias\necho \"eval \"$(hub alias -s)\"\" >> ~/.bashrc\n\n# Cleanup\nrm -rf hub-linux-amd64-2.12.1",
                "workingDirectory": "",
                "failOnStderr": "false"
              }
            },
            {
              "environment": {},
              "taskId": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
              "version": "2.*",
              "name": "Submit PRs for updates",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 2,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "script": "GITHUB_USER=azurebatchrendering\nGITHUB_PASSWORD=$(azurebatchrendering-github)\nHUB_VERBOSE=1\nexport GITHUB_USER\nexport GITHUB_PASSWORD\nexport HUB_VERBOSE\n\nhub -C azure-batch-maya pull-request -p -m \"rendering-container-images.json $(version) - $(Release.ReleaseName)\" -h azurebatchrendering:$(prBranchName) -b azure:$(azureBatchMaya-branchName)\n\nhub -C batchexplorer-data pull-request -p -m \"rendering-container-images.json $(version) - $(Release.ReleaseName)\" -h azurebatchrendering:$(prBranchName) -b azure:$(batchExplorerData-branchName)\n\nhub -C azure-batch-rendering pull-request -p -m \"Update $(version) -  $(Release.ReleaseName)\"  -h azurebatchrendering:$(prBranchName-versionUpdate) -b azure:$(azureBatchRendering-branchName)\n",
                "workingDirectory": "",
                "failOnStderr": "false"
              }
            },
            {
              "environment": {},
              "taskId": "e28912f1-0114-4464-802a-a3a35437fd16",
              "version": "1.*",
              "name": "Push prod images",
              "refName": "",
              "enabled": false,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "and(succeeded(), eq(variables['pushLatestImages'], 'true'))",
              "inputs": {
                "containerregistrytype": "Container Registry",
                "dockerRegistryEndpoint": "1b92d996-4f48-4cf3-9ba0-12a1977ae7df",
                "azureSubscriptionEndpoint": "",
                "azureContainerRegistry": "",
                "command": "Push an image",
                "dockerFile": "**/Dockerfile",
                "arguments": "",
                "pushMultipleImages": "true",
                "tagMultipleImages": "false",
                "imageName": "$(Build.Repository.Name):$(Build.BuildId)",
                "imageNamesPath": " PublishContainerImages/PublishContainerImages/OutputImages/latestImages.txt",
                "qualifyImageName": "false",
                "qualifySourceImageName": "false",
                "includeSourceTags": "false",
                "includeLatestTag": "false",
                "addDefaultLabels": "true",
                "useDefaultContext": "true",
                "buildContext": "",
                "imageDigestFile": "",
                "containerName": "",
                "ports": "",
                "volumes": "",
                "envVars": "",
                "workingDirectory": "",
                "entrypointOverride": "",
                "containerCommand": "",
                "runInBackground": "true",
                "restartPolicy": "no",
                "maxRestartRetries": "",
                "dockerHostEndpoint": "",
                "enforceDockerNamingConvention": "false",
                "memoryLimit": ""
              }
            },
            {
              "environment": {},
              "taskId": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
              "version": "2.*",
              "name": "Push prod images",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "and(succeeded(), eq(variables['pushProdImages'], 'true'))",
              "inputs": {
                "script": "cat  PublishContainerImages/PublishContainerImages/OutputImages/prodAcrImages.txt | xargs -n1 docker push",
                "workingDirectory": "",
                "failOnStderr": "false"
              }
            }
          ]
        }
      ],
      "environmentOptions": {
        "emailNotificationType": "OnlyOnFailure",
        "emailRecipients": "release.environment.owner;release.creator",
        "skipArtifactsDownload": false,
        "timeoutInMinutes": 0,
        "enableAccessToken": false,
        "publishDeploymentStatus": true,
        "badgeEnabled": true,
        "autoLinkWorkItems": false,
        "pullRequestDeploymentEnabled": false
      },
      "demands": [],
      "conditions": [
        {
          "name": "ReleaseStarted",
          "conditionType": 1,
          "value": ""
        }
      ],
      "executionPolicy": {
        "concurrencyCount": 1,
        "queueDepthCount": 0
      },
      "schedules": [],
      "currentRelease": {
        "id": 827,
        "url": "https://msazure.vsrm.visualstudio.com/51fdf21c-945b-476f-b036-1302f3d9d863/_apis/Release/releases/827",
        "_links": {}
      },
      "retentionPolicy": {
        "daysToKeep": 30,
        "releasesToKeep": 3,
        "retainBuild": true
      },
      "processParameters": {},
      "properties": {
        "LinkBoardsWorkItems": {
          "$type": "System.String",
          "$value": "False"
        }
      },
      "preDeploymentGates": {
        "id": 0,
        "gatesOptions": null,
        "gates": []
      },
      "postDeploymentGates": {
        "id": 0,
        "gatesOptions": null,
        "gates": []
      },
      "environmentTriggers": [],
      "badgeUrl": "https://msazure.vsrm.visualstudio.com/_apis/public/Release/badge/51fdf21c-945b-476f-b036-1302f3d9d863/7/8"
    }
  ],
  "artifacts": [
    {
      "sourceId": "51fdf21c-945b-476f-b036-1302f3d9d863:119658",
      "type": "Build",
      "alias": "batch-extension-templates",
      "definitionReference": {
        "defaultVersionBranch": {
          "id": "",
          "name": ""
        },
        "defaultVersionSpecific": {
          "id": "",
          "name": ""
        },
        "defaultVersionTags": {
          "id": "",
          "name": ""
        },
        "defaultVersionType": {
          "id": "latestType",
          "name": "Latest"
        },
        "definition": {
          "id": "119658",
          "name": "Azure.batch-extension-templates"
        },
        "definitions": {
          "id": "",
          "name": ""
        },
        "IsMultiDefinitionType": {
          "id": "False",
          "name": "False"
        },
        "project": {
          "id": "51fdf21c-945b-476f-b036-1302f3d9d863",
          "name": "AzureBatch"
        },
        "repository": {
          "id": "",
          "name": ""
        },
        "artifactSourceDefinitionUrl": {
          "id": "https://msazure.visualstudio.com/_permalink/_build/index?collectionId=41bf5486-7392-4b7a-a7e3-a735c767e3b3&projectId=51fdf21c-945b-476f-b036-1302f3d9d863&definitionId=119658",
          "name": ""
        }
      },
      "isRetained": false
    },
    {
      "sourceId": "51fdf21c-945b-476f-b036-1302f3d9d863:75762",
      "type": "Build",
      "alias": "PublishContainerImages",
      "definitionReference": {
        "artifactSourceDefinitionUrl": {
          "id": "https://msazure.visualstudio.com/_permalink/_build/index?collectionId=41bf5486-7392-4b7a-a7e3-a735c767e3b3&projectId=51fdf21c-945b-476f-b036-1302f3d9d863&definitionId=75762",
          "name": ""
        },
        "defaultVersionBranch": {
          "id": "",
          "name": ""
        },
        "defaultVersionSpecific": {
          "id": "",
          "name": ""
        },
        "defaultVersionTags": {
          "id": "",
          "name": ""
        },
        "defaultVersionType": {
          "id": "latestType",
          "name": "Latest"
        },
        "definition": {
          "id": "75762",
          "name": "PublishContainerImagesUtil"
        },
        "definitions": {
          "id": "",
          "name": ""
        },
        "IsMultiDefinitionType": {
          "id": "False",
          "name": "False"
        },
        "project": {
          "id": "51fdf21c-945b-476f-b036-1302f3d9d863",
          "name": "AzureBatch"
        },
        "repository": {
          "id": "",
          "name": ""
        }
      },
      "isPrimary": true,
      "isRetained": false
    }
  ],
  "triggers": [],
  "releaseNameFormat": "Release.$(rev:r)-Version.$(version)",
  "tags": [],
  "properties": {
    "DefinitionCreationSource": {
      "$type": "System.String",
      "$value": "ReleaseImport"
    },
    "IntegrateJiraWorkItems": {
      "$type": "System.String",
      "$value": "false"
    },
    "IntegrateBoardsWorkItems": {
      "$type": "System.String",
      "$value": "False"
    }
  },
  "id": 7,
  "name": "Publish Rendering Docker Images",
  "path": "\\RenderingContainerImages",
  "projectReference": null,
  "url": "https://msazure.vsrm.visualstudio.com/51fdf21c-945b-476f-b036-1302f3d9d863/_apis/Release/definitions/7",
  "_links": {
    "self": {
      "href": "https://msazure.vsrm.visualstudio.com/51fdf21c-945b-476f-b036-1302f3d9d863/_apis/Release/definitions/7"
    },
    "web": {
      "href": "https://msazure.visualstudio.com/51fdf21c-945b-476f-b036-1302f3d9d863/_release?definitionId=7"
    }
  }
}